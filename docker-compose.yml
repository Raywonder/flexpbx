version: '3.8'

services:
  accessible-pbx:
    build: .
    container_name: accessible-pbx-server
    restart: unless-stopped
    ports:
      - "80:3000"
      - "443:3443"
      - "8088:8088"
      - "8089:8089"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=accessible_pbx
      - DB_USER=pbx_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - AMI_HOST=asterisk
      - AMI_PORT=5038
      - AMI_USERNAME=admin
      - AMI_PASSWORD=${AMI_PASSWORD}
      - ACCESSIBILITY_ENABLED=${ACCESSIBILITY_ENABLED:-true}
      - SCREEN_READER_SUPPORT=${SCREEN_READER_SUPPORT:-true}
      - AUDIO_FEEDBACK_ENABLED=${AUDIO_FEEDBACK_ENABLED:-true}
      - VOICE_ANNOUNCEMENTS_ENABLED=${VOICE_ANNOUNCEMENTS_ENABLED:-true}
    depends_on:
      - mysql
      - redis
      - asterisk
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./config:/app/config
      - ./logs:/app/logs
      - recordings:/app/recordings
      - voicemail:/app/voicemail
    networks:
      - pbx_network

  asterisk:
    image: andrius/asterisk:latest
    container_name: asterisk-server
    restart: unless-stopped
    ports:
      - "5060:5060/udp"
      - "5060:5060/tcp"
      - "5061:5061/tcp"
      - "10000-20000:10000-20000/udp"
      - "5038:5038"
    environment:
      - ASTERISK_UID=1000
      - ASTERISK_GID=1000
    volumes:
      - ./asterisk/etc:/etc/asterisk
      - ./asterisk/sounds:/var/lib/asterisk/sounds
      - ./asterisk/agi-bin:/var/lib/asterisk/agi-bin
      - ./asterisk/spool:/var/spool/asterisk
      - recordings:/var/spool/asterisk/monitor
      - voicemail:/var/spool/asterisk/voicemail
    networks:
      - pbx_network

  mysql:
    image: mariadb:10.11
    container_name: mysql-server
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=accessible_pbx
      - MYSQL_USER=pbx_user
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/init:/docker-entrypoint-initdb.d
    networks:
      - pbx_network

  redis:
    image: redis:7-alpine
    container_name: redis-server
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - pbx_network

  nginx:
    image: nginx:alpine
    container_name: nginx-server
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./public:/usr/share/nginx/html:ro
    depends_on:
      - accessible-pbx
    networks:
      - pbx_network

  # Monitoring Profile
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-server
    profiles: ["monitoring"]
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - pbx_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-server
    profiles: ["monitoring"]
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - pbx_network

  # Logging Profile
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: elasticsearch-server
    profiles: ["logging"]
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - pbx_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: kibana-server
    profiles: ["logging"]
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - pbx_network

  # Testing Profile
  accessibility-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: accessibility-test
    profiles: ["testing"]
    environment:
      - TEST_URL=http://accessible-pbx:3000
      - HEADLESS=true
    volumes:
      - ./tests:/app/tests
      - ./test-results:/app/test-results
    depends_on:
      - accessible-pbx
    networks:
      - pbx_network

  load-test:
    image: grafana/k6:latest
    container_name: load-test
    profiles: ["testing"]
    volumes:
      - ./tests/load:/scripts
    command: run /scripts/load-test.js
    depends_on:
      - accessible-pbx
    networks:
      - pbx_network

volumes:
  mysql_data:
  redis_data:
  grafana_data:
  prometheus_data:
  elasticsearch_data:
  recordings:
  voicemail:

networks:
  pbx_network:
    driver: bridge